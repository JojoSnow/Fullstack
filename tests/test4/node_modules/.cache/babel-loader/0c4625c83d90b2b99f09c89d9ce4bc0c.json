{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\joksu\\\\Desktop\\\\Koulu\\\\Koodaus\\\\Fullstackopen\\\\tests\\\\test4\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport loginService from './services/login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notification = _ref => {\n  let {\n    message\n  } = _ref;\n\n  if (message === null) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Notification;\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: footerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"em\", {\n      children: \"Note app, Department of Computer Science, University of Helsinki 2021\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Footer;\n\nconst App = () => {\n  _s();\n\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    noteService.getAll().then(initialNotes => {\n      setNotes(initialNotes);\n    });\n  }, []);\n\n  const addNote = event => {\n    event.preventDefault();\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    };\n    noteService.create(noteObject).then(returnedNote => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote('');\n    });\n  };\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id);\n    const changedNote = { ...note,\n      important: !note.important\n    };\n    noteService.update(changedNote).then(returnedNote => {\n      setNotes(notes.map(notee => notee.id !== id ? notee : returnedNote));\n    }).catch(error => {\n      setErrorMessage(`Note '${note.content}' was already removed from server`);\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 5000);\n      setNotes(notes.filter(n => n.id !== id));\n    });\n  };\n\n  const handleNoteChange = event => {\n    setNewNote(event.target.value);\n  };\n\n  const handleLogin = async event => {\n    event.preventDefault();\n\n    try {\n      const newUser = await loginService.login({\n        username,\n        password\n      });\n      noteService.setToken(newUser.token);\n      setUser(newUser);\n      setUsername('');\n      setPassword('');\n    } catch (exception) {\n      setErrorMessage('wrong credentials');\n      setTimeout(() => {\n        setErrorMessage(null);\n      }, 3000);\n    }\n  };\n\n  const notesToShow = showAll ? notes : notes.filter(note => note.important);\n\n  const loginForm = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"username\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          name: \"Username\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setUsername(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"password\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          name: \"Password\",\n          onChange: _ref3 => {\n            let {\n              target\n            } = _ref3;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }, this);\n  };\n\n  const noteForm = () => {\n    /*#__PURE__*/\n    _jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: newNote,\n        onChange: handleNoteChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Notification, {\n      message: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), user === null ? loginForm() : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [user.name, \" logged in\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this), noteForm()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowAll(!showAll),\n        children: [\"show \", showAll ? 'important' : 'all']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notesToShow.map(note => /*#__PURE__*/_jsxDEV(Note, {\n        note: note,\n        toggleImportance: () => toggleImportanceOf(note.id)\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"dUfkRzglrRLT1YrjQlNF/NhizGE=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"Footer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/joksu/Desktop/Koulu/Koodaus/Fullstackopen/tests/test4/src/App.js"],"names":["React","useState","useEffect","Note","noteService","loginService","Notification","message","Footer","footerStyle","color","fontStyle","fontSize","App","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","username","setUsername","password","setPassword","user","setUser","getAll","then","initialNotes","addNote","event","preventDefault","noteObject","content","date","Date","toISOString","important","Math","random","create","returnedNote","concat","toggleImportanceOf","id","note","find","n","changedNote","update","map","notee","catch","error","setTimeout","filter","handleNoteChange","target","value","handleLogin","newUser","login","setToken","token","exception","notesToShow","loginForm","noteForm","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Note from './components/Note';\nimport noteService from './services/notes';\nimport loginService from './services/login';\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n\n  useEffect(() => {\n    noteService\n      .getAll()\n        .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  \n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(changedNote).then(returnedNote => {\n        setNotes(notes.map(notee => notee.id !== id ? notee : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    \n    try {\n      const newUser = await loginService.login({username, password})\n      \n      noteService.setToken(newUser.token)\n      setUser(newUser)\n      setUsername('')\n      setPassword('')\n    } catch (exception) {\n      setErrorMessage('wrong credentials')\n      setTimeout(() => {\n        setErrorMessage(null)\n      }, 3000)\n    }\n  }\n\n  const notesToShow = showAll\n  ? notes\n  : notes.filter(note => note.important);\n\n  const loginForm = () => {\n    <form onSubmit={handleLogin}>\n      <div>\n        username\n          <input type=\"text\" value={username} name=\"Username\" \n          onChange= {({target}) => setUsername(target.value)} />\n      </div>\n      <div>\n        password\n          <input type=\"password\" value={password} name=\"Password\"\n          onChange={({target}) => setPassword(target.value)} />\n      </div>\n      <button type=\"submit\">Login</button>\n    </form>\n  }\n\n  const noteForm = () => {\n    <form onSubmit={addNote}>\n      <input \n        value={newNote}\n        onChange={handleNoteChange}\n      />\n      <button type=\"submit\">save</button>\n    </form>\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      \n      <Notification message={errorMessage} />\n\n      {user === null ? \n        loginForm() : \n        <div>\n          <p>{user.name} logged in</p>\n          {noteForm()}\n        </div>\n      }\n\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>  \n\n      <ul>\n        {notesToShow.map(note => \n          <Note\n          key={note.id}\n          note={note} \n          toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>  \n\n      <Footer /> \n    </div>\n  );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}