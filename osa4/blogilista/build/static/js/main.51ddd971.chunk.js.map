{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","baseUrl","token","getAll","axios","get","then","response","data","create","newBlog","a","config","headers","Authorization","post","setToken","newToken","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","useEffect","blogService","bs","loggedUserJSON","localStorage","getItem","loggedUser","JSON","parse","handleLogin","event","preventDefault","loginService","newUser","window","setItem","stringify","console","log","handleLogout","removeItem","addBlog","blogObject","returnedBlog","concat","onSubmit","type","value","name","onChange","target","onClick","htmlFor","map","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51ddd971.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({blog}) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>  \r\n)\r\n\r\nexport default Blog","import axios from 'axios'\r\nconst baseUrl = '/api/blogs'\r\n\r\nlet token = null\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`\r\n}\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = async newBlog => {\r\n  const config = {\r\n    headers: {Authorization: token}\r\n  }\r\n  const response = await axios.post(baseUrl, newBlog, config)\r\n  return response.data\r\n}\r\n\r\nexport default { getAll, create, setToken }","import axios from 'axios'\r\nconst baseUrl = '/api/login'\r\n\r\nconst login = async credentials => {\r\n\tconst response = await axios.post(baseUrl, credentials)\r\n\treturn response.data\r\n}\r\n\r\nexport default {login}","import React, { useState, useEffect } from 'react'\r\nimport Blog from './components/Blog'\r\nimport blogService from './services/blogs'\r\nimport loginService from './services/login'\r\n\r\nconst App = () => {\r\n\tconst [blogs, setBlogs] = useState([])\r\n\tconst [username, setUsername] = useState('')\r\n\tconst [password, setPassword] = useState('')\r\n\tconst [user, setUser] = useState(null)\r\n\tconst [title, setTitle] = useState('')\r\n\tconst [author, setAuthor] = useState('')\r\n\tconst [url, setUrl] = useState('')\r\n\r\n\tuseEffect(() => {\r\n    \tblogService.getAll().then(bs =>\r\n    \t\tsetBlogs(bs)\r\n    \t)  \r\n\t}, [])\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loggedUserJSON = localStorage.getItem('loggedBlogUser')\r\n\t\tif (loggedUserJSON) {\r\n\t\t\tconst loggedUser = JSON.parse(loggedUserJSON)\r\n\t\t\tsetUser(loggedUser)\r\n\t\t}\r\n\t}, [])\r\n\r\n\tconst handleLogin = async (event) => {\r\n    \tevent.preventDefault()\r\n\r\n    \ttry {\r\n    \t\tconst newUser = await loginService.login({username, password})\r\n\r\n\t\t\twindow.localStorage.setItem(\r\n\t\t\t\t'loggedBlogUser', JSON.stringify(newUser)\r\n\t\t\t)\r\n\r\n    \t\tsetUser(newUser)\r\n    \t\tsetUsername('')\r\n    \t\tsetPassword('')\r\n    \t} catch (exception) {\r\n    \t\tconsole.log('wrong credentials')\r\n    \t}\r\n\t}\r\n\r\n\tconst handleLogout = async () => {\r\n\t\tlocalStorage.removeItem('loggedBlogUser')\r\n\r\n\t\tsetUser(null)\r\n\t}\r\n\r\n\tconst addBlog = async (event) => {\r\n\t\tevent.preventDefault()\r\n\t\tconst blogObject = {\r\n\t\t\ttitle: title,\r\n\t\t\tauthor: author,\r\n\t\t\turl: url\r\n\t\t}\r\n\r\n\t\tawait blogService\r\n\t\t\t.create(blogObject)\r\n\t\t\t.then(returnedBlog => {\r\n\t\t\t\tconsole.log('created')\r\n\t\t\t\tsetBlogs(blogs.concat(returnedBlog))\r\n\t\t\t\tsetTitle('')\r\n\t\t\t\tsetAuthor('')\r\n\t\t\t\tsetUrl('')\r\n\t\t\t})\r\n\t}\r\n\r\n  \tconst loginForm = () => (\r\n\t\t<form onSubmit={handleLogin}>\r\n\t\t\t\r\n\t\t\t<div>\r\n\t\t\t\tusername\r\n\t\t\t\t\t<input type=\"text\" value={username} name=\"Username\"\r\n\t\t\t\t\tonChange={({target}) => setUsername(target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\tpassword\r\n\t\t\t\t\t<input type=\"password\" value={password} name=\"Password\"\r\n\t\t\t\t\tonChange={({target}) => setPassword(target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<button type=\"submit\">Login</button>\r\n\t\t</form>\r\n\t)\r\n\r\n\tconst blogsDiv = () => (\r\n\t\t<div>\r\n    \t\t{blogs.map(blog =>\r\n    \t\t\t<Blog key={blog.id} blog={blog} />\r\n      \t\t)}\r\n    \t</div>\r\n\t)\r\n\r\n\tconst blogForm = () => (\r\n\t\t<form onSubmit={addBlog}>\r\n\t\t\t<label htmlFor=\"Title\">Title:</label>\r\n\t\t\t<input type=\"text\" value={title} name=\"Title\"\r\n\t\t\tonChange={({target}) => setTitle(target.value)} /> <br/>\r\n\t\t\t<label htmlFor=\"Author\">Author:</label>\r\n\t\t\t<input type=\"text\" value={author} name=\"Author\"\r\n\t\t\tonChange={({target}) => setAuthor(target.value)} /> <br/>\r\n\t\t\t<label htmlFor=\"Url\">Url:</label>\r\n\t\t\t<input type=\"text\" value={url} name=\"Url\"\r\n\t\t\tonChange={({target}) => setUrl(target.value)} /> <br/>\r\n\t\t\t<button type=\"submit\">Create</button>\r\n\t\t</form>\r\n\t)\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{user === null ?\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>log in to application</h2>\r\n\t\t\t\t\t\t{loginForm()}\r\n\t\t\t\t</div> :\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>blogs</h2>\r\n\t\t\t\t\t\t<p>{user.name} logged in <button onClick={handleLogout}>Logout</button></p>\r\n\r\n\t\t\t\t\t<h2>create new</h2>\r\n\t\t\t\t\t\t{blogForm()}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{blogsDiv()}\r\n\t\t\t\t</div>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}