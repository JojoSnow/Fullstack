[{"C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\index.js":"1","C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\App.js":"2","C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\services\\persons.js":"3"},{"size":148,"mtime":1641981131230,"results":"4","hashOfConfig":"5"},{"size":4974,"mtime":1642595509339,"results":"6","hashOfConfig":"5"},{"size":686,"mtime":1642594349190,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"6csgdz",{"filePath":"11","messages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13"},{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\index.js",[],["17","18"],"C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\App.js",["19","20"],"import React, { useEffect, useState } from 'react';\nimport personService from './services/persons';\nimport axios from 'axios';\n\nconst Filter = (props) => {\n  return (\n    <form>\n      <div>\n        filter shown with <input \n          value={props.filterName}\n          onChange={props.handleFilterName}\n        />\n      </div>\n    </form>\n  )\n}\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.addPerson}>\n        <div>\n          name: <input \n            value={props.newName}\n            onChange={props.handleNameChange}\n          />\n        </div>\n        <div>\n          number: <input \n            value={props.newNum}\n            onChange={props.handleNumChange}\n          />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Persons = (props) => {\n  const {persons} = props;\n  const names = persons.filter(person => \n    person.name.toLowerCase().includes(props.filterName.toLowerCase()));\n\n  return (\n      <>\n          {names.map(person =>\n              <p key={person.id}>\n                  {person.name} {person.number}\n                  <button \n                    id={person.id} \n                    onClick={props.handleNameDel} \n                  >\n                    delete\n                  </button>\n              </p>\n          )}\n      </>\n  )\n}\n\nconst Notification = ({message}) => {\n  if (message === null) {\n    return null\n  }\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([]); \n  const [newName, setNewName] = useState('');\n  const [newNum, setNewNum] = useState('');\n  const [filterName, setFilterName] = useState('');\n  const [message, setMessage] = useState('');\n  \n  useEffect(() => {\n    personService\n      .getAll()\n      .then(response => {\n        setPersons(response);\n      });\n  }, []);\n  \n  const addPerson = (event) => {\n    event.preventDefault();\n    const personObject = {\n      name: newName,\n      number: newNum,\n    };\n\n    const name = persons.filter(person => person.name === newName);\n\n    if (newName.length !== 0) {\n      if (name.length !== 0) {\n        if (name[0].name === newName) {\n          // if (window.confirm(`${newName} is already added to Phonebook, replace the old number with a new one?`)) {\n\n          //   axios\n          //     .put(`http://localhost:3001/persons/${name[0].id}`, personObject)\n            \n          //   setNewName('');\n          //   setNewNum('');\n          //   setFilterName('');\n            \n          //   window.location.reload();\n          // }\n\n          personService\n            .update(name[0].id, personObject)\n            .then(error => {\n              setMessage(\n                `Changed ${name[0].name} number`\n              )\n              setTimeout(() => {\n                setMessage(null)\n                window.location.reload()\n              }, 3000)\n              setNewName('');\n              setNewNum('');\n              setFilterName('');\n            })\n        }\n      } else {          \n        personService\n          .create(personObject)\n          .then(response => {\n            setPersons(persons.concat(response))\n            setMessage(\n              `Added ${newName}`\n            )\n            setTimeout(() => {\n              setMessage(null)\n              window.location.reload()\n            }, 3000)\n            setNewName('');\n            setNewNum('');\n            setFilterName('');\n          })\n          \n    } \n\n      // axios\n      //   .post('http://localhost:3001/persons', personObject)\n    }\n  }\n\n  const handleNameDel = (event) => {\n    const id = event.target.id;\n    const nameObject = persons.find(n => n.id == id)\n    const name = nameObject.name\n\n    personService\n        .del(id)\n        .then(error => {\n          setMessage(\n            `Deleted ${name}`\n          )\n          setTimeout(() => {\n            setMessage(null)\n            window.location.reload()\n          }, 3000);\n        })\n    \n    // if (window.confirm(`Delete ${name} ?`)) {\n      // axios\n      //   .delete(`http://localhost:3001/persons/${id}`);      \n    // }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  }\n\n  const handleNumChange = (event) => {\n    setNewNum(event.target.value);\n  }\n\n  const handleFilterName = (event) => {\n    setFilterName(event.target.value);\n  }\n  \n  return (\n    <div>\n      <h1>Phonebook</h1>\n\n        <Notification message={message} />\n\n        <Filter filterName={filterName} handleFilterName={handleFilterName} />\n\n      <h2>Add a new</h2>\n\n        <PersonForm  addPerson={addPerson} \n          newName={newName} handleNameChange={handleNameChange} \n          newNum={newNum} handleNumChange={handleNumChange} \n        />\n\n      <h2>Numbers</h2>\n\n      <div>\n        <Persons persons={persons} filterName={filterName} handleNameDel={handleNameDel} />\n      </div>\n    </div>\n  );\n\n};\n\nexport default App;","C:\\Users\\joksu\\Desktop\\Koulu\\Koodaus\\Fullstackopen\\osa2\\puhelinluettelo\\step7\\src\\services\\persons.js",["21"],"import axios from 'axios';\r\n\r\nconst baseUrl = 'http://localhost:3001/api/persons';\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then(response => response.data);\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, del, update};",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":3,"column":8,"nodeType":"28","messageId":"29","endLine":3,"endColumn":13},{"ruleId":"30","severity":1,"message":"31","line":153,"column":47,"nodeType":"32","messageId":"33","endLine":153,"endColumn":49},{"ruleId":"34","severity":1,"message":"35","line":25,"column":1,"nodeType":"36","endLine":25,"endColumn":46},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]